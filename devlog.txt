Development Log

Day 1: 5/12/16
- Added a dev log!
- Created fields and getters in Profile class
- Completed method findMeanNumUniqueWords in Profile
- Completed method findMeanWordsPerSentence in Profile
- Completed method findMeanWordLength in Profile
- Completed method findMinWordLength in Profile
- Completed method findMaxWordLength in Profile

To do: 	Complete methods findMeanCharactersPerSentence and createProfileFor in Profile

Day 2: 5/16/16
- Completed method findMeanCharactersPerSentence in Profile
- Completed method createProfileFor in Profile
- Fixed method findMeanNumUniqueWords in Profile
- Modified ProfileTester to begin creating Profiles for each author
- Created toString method in Profile

To do: Add authors files into project and print out info about each author's profile

Day 3: 5/17/16
- Added authors files to project
- Updated filepaths in ProfileTester
- added method isInBounds in Profile
- Combined all field setting methods in Profile into one large method

To do: increase speed of setFields method in Profile to see whether methods work correctly

Day 4: 5/19/16
- Deleted field and getter method for findMeanNumUniqueNumWords in Profile
- Wrote method findLeast in Main
- Created method generateProfiles in ProfileGenerator
- Created static variables for each author's profile in ProfileGenerator
- Generated getters for the above mentioned variables
- Overloaded method createProfileFor in Profile
- Wrote method similarity in Profile

To do: implement a field in Profile dealing with n-gram word frequency

Day 5: 5/23/16
- Created Word class
- Generated getters and setters in Word class
- Created HashMap in Profile's setFields method
- Began to implement word comparison by frequency

To do: finish implementing frequency comparison of words

Day 6: 5/24/16
- Wrote a toString method in Word
- Made Word implement the comparable interface
- Finished implementing comparison by word frequency in Profile

To do: Begin and finish write up for this project